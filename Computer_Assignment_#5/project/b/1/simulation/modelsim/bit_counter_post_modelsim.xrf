vendor_name = ModelSim
source_file = 1, C:/aidin/AIDIN/peregrine/term-3/Digital-systems/Cas/ca5/b/1/bit_counter_post.v
source_file = 1, C:/aidin/AIDIN/peregrine/term-3/Digital-systems/Cas/ca5/b/1/db/bit_counter_post.cbx.xml
design_name = bit_counter_post
instance = comp, \wake_transmitter~output , wake_transmitter~output, bit_counter_post, 1
instance = comp, \the_number[0]~output , the_number[0]~output, bit_counter_post, 1
instance = comp, \the_number[1]~output , the_number[1]~output, bit_counter_post, 1
instance = comp, \the_number[2]~output , the_number[2]~output, bit_counter_post, 1
instance = comp, \the_number[3]~output , the_number[3]~output, bit_counter_post, 1
instance = comp, \the_number[4]~output , the_number[4]~output, bit_counter_post, 1
instance = comp, \the_number[5]~output , the_number[5]~output, bit_counter_post, 1
instance = comp, \the_number[6]~output , the_number[6]~output, bit_counter_post, 1
instance = comp, \the_number[7]~output , the_number[7]~output, bit_counter_post, 1
instance = comp, \clk~input , clk~input, bit_counter_post, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, bit_counter_post, 1
instance = comp, \rise~input , rise~input, bit_counter_post, 1
instance = comp, \the_cnt|contain[0]~2 , the_cnt|contain[0]~2, bit_counter_post, 1
instance = comp, \rst~input , rst~input, bit_counter_post, 1
instance = comp, \rst~inputclkctrl , rst~inputclkctrl, bit_counter_post, 1
instance = comp, \the_cnt|contain[0] , the_cnt|contain[0], bit_counter_post, 1
instance = comp, \the_cnt|contain[1]~1 , the_cnt|contain[1]~1, bit_counter_post, 1
instance = comp, \the_cnt|contain[1] , the_cnt|contain[1], bit_counter_post, 1
instance = comp, \the_cnt|Equal0~0 , the_cnt|Equal0~0, bit_counter_post, 1
instance = comp, \the_cnt|Add0~1 , the_cnt|Add0~1, bit_counter_post, 1
instance = comp, \the_cnt|contain[2]~0 , the_cnt|contain[2]~0, bit_counter_post, 1
instance = comp, \the_cnt|contain[2] , the_cnt|contain[2], bit_counter_post, 1
instance = comp, \the_cnt|Add0~0 , the_cnt|Add0~0, bit_counter_post, 1
instance = comp, \the_cnt|ns[3]~0 , the_cnt|ns[3]~0, bit_counter_post, 1
instance = comp, \the_cnt|contain[3] , the_cnt|contain[3], bit_counter_post, 1
instance = comp, \the_cnt|Equal1~0 , the_cnt|Equal1~0, bit_counter_post, 1
instance = comp, \serial_in~input , serial_in~input, bit_counter_post, 1
instance = comp, \s_reg|contain[7]~feeder , s_reg|contain[7]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[7] , s_reg|contain[7], bit_counter_post, 1
instance = comp, \s_reg|contain[6]~feeder , s_reg|contain[6]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[6] , s_reg|contain[6], bit_counter_post, 1
instance = comp, \s_reg|contain[5]~feeder , s_reg|contain[5]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[5] , s_reg|contain[5], bit_counter_post, 1
instance = comp, \s_reg|contain[4]~feeder , s_reg|contain[4]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[4] , s_reg|contain[4], bit_counter_post, 1
instance = comp, \s_reg|contain[3]~feeder , s_reg|contain[3]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[3] , s_reg|contain[3], bit_counter_post, 1
instance = comp, \s_reg|contain[2]~feeder , s_reg|contain[2]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[2] , s_reg|contain[2], bit_counter_post, 1
instance = comp, \s_reg|contain[1]~feeder , s_reg|contain[1]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[1] , s_reg|contain[1], bit_counter_post, 1
instance = comp, \s_reg|contain[0]~feeder , s_reg|contain[0]~feeder, bit_counter_post, 1
instance = comp, \s_reg|contain[0] , s_reg|contain[0], bit_counter_post, 1
design_name = hard_block
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
instance = comp, \~ALTERA_ASDO~~ibuf , ~ALTERA_ASDO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_NCSO~~ibuf , ~ALTERA_NCSO~~ibuf, hard_block, 1
